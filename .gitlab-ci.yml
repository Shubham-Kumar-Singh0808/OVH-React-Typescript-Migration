image: node:16

stages:
  - test
  - build
  - sonarqube
  - deployqa

cache:
  key: ovh-react-typescript-migration
  paths:
    - node_modules/

Build:
  stage: build
  only:
    - merge_request
  # only:
  #   # $CI_COMMIT_BRANCH If changes are pushed to specific branch.
  #   # $CI_MERGE_REQUEST_TARGET_BRANCH_NAME When merge request is created.
  #   variables:
  #     - $CI_COMMIT_BRANCH == "qa" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  allow_failure: false
  before_script:
    - echo "Executing build step"
  script:
    - echo "Installing npm package"
    - npm install

Test:
  stage: test
  only:
    - merge_request
  # only:
  #   # $CI_COMMIT_BRANCH If changes are pushed to specific branch.
  #   # $CI_MERGE_REQUEST_TARGET_BRANCH_NAME When merge request is created.
  #   variables:
  #     - $CI_COMMIT_BRANCH == "qa" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  allow_failure: false
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  script:
    - echo "Starting Test and Lint"
    - npm run lint
    - npm run test:cov
  artifacts:
    when: always
    reports:
      cobertura: coverage/cobertura-coverage.xml
    paths:
      - coverage

Sonarqube:
  stage: sonarqube
  only:
    - merge_request
  # only:
  #   # $CI_COMMIT_BRANCH If changes are pushed to specific branch.
  #   # $CI_MERGE_REQUEST_TARGET_BRANCH_NAME When merge request is created.
  #   variables:
  #     - $CI_COMMIT_BRANCH == "qa" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "qa" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  allow_failure: false
  script:
    - echo "Starting sonar analysis"
    - dir
    - cmd.exe /C "sonar-scanner -X -Dsonar.projectKey=ovh-typescript-react-migration -Dsonar.projectName=OVHTypeScriptReactMigration -Dsonar.sources=src -Dsonar.qualitygate.wait=true -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info"

Deployqa:
  stage: deployqa
  only:
    - qa
  script:
    - echo "Creating a war file"
    - mvn package
    - echo "Deploying to qa environment"
    - cmd.exe /C "echo n | psftp $QA_DEPLOY_USER@$QA_DEPLOY_HOST -pw $QA_DEPLOY_PASSWORD -P 22 -b deployScripts/deploy_qa.txt"
